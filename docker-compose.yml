version: "3.7"

networks:
  my-network:
    name: my-network
    driver: bridge

services:
  zookeeper:
    image: zookeeper:latest
    container_name: zookeeper
    networks:
      - my-network
    ports:
      - "2181:2181"

  kafka:
    image: obsidiandynamics/kafka
    container_name: kafka
    restart: "no"
    networks:
      - my-network
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "my-topic:1:1"
    depends_on:
      - zookeeper


#  kafdrop:
#    image: obsidiandynamics/kafdrop
#    container_name: kafdrop
#    restart: "no"
#    networks:
#      - my-network
#    ports:
#      - "9000:9000"
#    environment:
#      KAFKA_BROKERCONNECT: "kafka:29092"
#    depends_on:
#      - "kafka"

  main-service:
    build: /main/
    ports:
      - "8080:8080"
    depends_on:
      - kafka
      - zookeeper
    networks:
      - my-network


  report:
    build: /report/
    ports:
      - "8081:8081"
    environment:
      - MONGODB_URL=mongodb://mongodb:27017/ReportArchiveDB
    depends_on:
      - mongodb
    networks:
      - my-network

  mongodb:
    image: mongo
    ports:
      - "27017:27017"
    networks:
      - my-network
    volumes:
      - dbdata:/data/db

volumes:
  dbdata:

